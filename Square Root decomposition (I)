#include<bits/stdc++.h>
#define ll long long int
using namespace std;
void single_update(vector<ll> &block, vector<ll> &a, ll weight, int index, ll block_length)
{
    a[index] += weight;
    block[index / block_length] += weight;
}
ll find_range_sum(int l, int r, ll block_length, vector<ll> block, vector<ll> a)
{
    ll sum = 0;
    int i = l;
    while(i <= r)
    {
        if(i % block_length == 0 and i + block_length - 1 <= r)
        {
            sum += block[i / block_length];
            i += block_length;
        }
        else
        {
            sum += a[i];
            i++;
        }
    }
    return sum;
}
int main()
{
    int n, q;
    cin>>n>>q;
    vector<ll> a(n);
    for(int i = 0; i < n; i++)
        cin>>a[i];
    ll block_length = (int) sqrt(n + 0.0) + 1; 
    vector<ll> block(block_length, 0);
    for(int i = 0; i < n; i++)
        block[i / block_length] += a[i];
    for(int i = 0; i < q; i++)
    {
        int l, r, index;
        ll weight;
        cin>>l>>r>>index>>weight;
        l--, r--;
        single_update(block, a, weight, index, block_length);
        ll sum = find_range_sum(l, r, block_length, block, a);
        cout<<sum<<endl;
    }
}
