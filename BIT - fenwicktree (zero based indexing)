#include <bits/stdc++.h>
#define ll long long int
using namespace std;

struct FenwickTree {
    vector<int> bit;
    int MaxVal;
    FenwickTree(int n) {
        MaxVal = n;
        bit.assign(n, 0);
    }
    int prefix_sum(int r) {
        int ret = 0;
        while ( r >= 0 )
        {
            ret += bit[r];
            r = (r & (r + 1)) - 1;
        }
        return ret;
    }
    int range_sum(int l, int r) {
        return prefix_sum(r) - prefix_sum(l - 1);
    }
    void update(int idx, ll val) {
        while (idx < MaxVal) {
            bit[idx] += val;
            idx |= (idx + 1);
        }
    }
};
int main() {
    int n, q;
    cin >> n >> q;
    FenwickTree bit(n);
    for (int i = 0; i < n; ++i) {
        int val;
        cin >> val;
        bit.update(i, val); 
    }
    for(int i = 0; i < n; i++)
        cout<<bit.single_sum(i)<<' ';
    cout<<endl;
    cout<<bit.range_sum(2, 4)<<endl;
}
